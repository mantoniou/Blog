mutate(fit_ets = map(data.ts, ets)) %>%
mutate(summary_ets = map(fit_ets, summary)) %>%
mutate(mape_ets = map(summary_ets, 5)) %>%
mutate(fit.arima = map(data.ts, auto.arima)) %>%
mutate(summary_arima = map(fit.arima, summary)) %>%
mutate(mape_arima = map(summary_arima, 5)) %>%
select(tag, mape_arima, mape_ets) %>%
mutate(mape_arima = round(as.numeric(mape_arima), 2),
mape_ets = round(as.numeric(mape_ets), 2))
table_a%>%
kable() %>%
kable_styling()
blogdown:::serve_site()
blogdown:::serve_site()
d_ends <- yearly_nest %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
library(tidyverse)
library(plotly)
library(DT)
library(kableExtra)
library(knitr)
theme_set(theme_minimal())
yearly_tag <- read_csv("https://gist.githubusercontent.com/dgrtwo/a30d99baa9b7bfc9f2440b355ddd1f75/raw/700ab5bb0b5f8f5a14377f5103dbe921d4238216/by_tag_year.csv")
kable(head(yearly_tag)) %>%
kable_styling()
# Add fraction column
yearly_tag <-
yearly_tag %>%
mutate(fraction = round(number/year_total, 4))
# Print the new table
kable(head(yearly_tag)) %>%
kable_styling()
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
d_labels
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels))
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[5] <- 0.06
d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018))
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels))
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends
yearly_top
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
d_labels
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
# d_ends[5] <- 0.06
# d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
d_labels
d_ends[6] <- 0.06
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
# d_ends[6] <- 0.06
# d_ends[7] <- 0.03
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
d_ends
d_ends[6] <- 0.03
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
d_ends
d_labels
d_ends <- yearly_nest %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
library(forecast)
library(sweep)
# Get tags for top programming languages
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
# Create the dataset
yearly_nest <-
yearly_tag  %>%
filter(tag %in% programming_lang) %>%
arrange(tag, year) %>%
select(tag, fraction) %>%
group_by(tag) %>%
nest(.key = "data.tbl") %>% # nest it
mutate(data.ts = map(.x    = data.tbl, #create ts object
.f    = ts,
start = 2008)
) %>%
mutate(fit_ets = map(data.ts, ets)) %>%
mutate(summary_ets = map(fit_ets, summary)) %>%
mutate(mape_ets = map(summary_ets, 5)) %>%
mutate(fit.arima = map(data.ts, auto.arima)) %>%
mutate(summary_arima = map(fit.arima, summary)) %>%
mutate(mape_arima = map(summary_arima, 5)) %>%
mutate(final_model = if_else(as.numeric(mape_arima) <= as.numeric(mape_ets), fit.arima, fit_ets)) %>%
mutate(predict = map(final_model, forecast, h = 5)) %>%
mutate(sweep = map(predict, sw_sweep)) %>%
unnest(sweep) %>%
mutate(fraction = if_else(fraction < 0, 0, fraction))
table_a <-
yearly_tag  %>%
filter(tag %in% programming_lang) %>%
arrange(tag, year) %>%
select(tag, fraction) %>%
group_by(tag) %>%
nest(.key = "data.tbl") %>% # nest it
mutate(data.ts = map(.x    = data.tbl, #create ts object
.f    = ts,
start = 2008)
) %>%
mutate(fit_ets = map(data.ts, ets)) %>%
mutate(summary_ets = map(fit_ets, summary)) %>%
mutate(mape_ets = map(summary_ets, 5)) %>%
mutate(fit.arima = map(data.ts, auto.arima)) %>%
mutate(summary_arima = map(fit.arima, summary)) %>%
mutate(mape_arima = map(summary_arima, 5)) %>%
select(tag, mape_arima, mape_ets) %>%
mutate(mape_arima = round(as.numeric(mape_arima), 2),
mape_ets = round(as.numeric(mape_ets), 2))
d_ends <- yearly_nest %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_labels <- yearly_nest %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
d_labels
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
d_labels
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[1] <- 0.052
d_ends[6] <- 0.24
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[1] <- 0.052
d_ends[6] <- 0.024
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[1] <- 0.054
d_ends[6] <- 0.024
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
# Get the six largest tags
programming_lang <- c("r", "python", "c#", "java", "JavaScript", "php", "c++", "ruby")
yearly_top <-
yearly_tag %>%
filter(tag %in% programming_lang)
d_ends <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(fraction)
d_ends[1] <- 0.053
d_ends[6] <- 0.024
d_labels <-
yearly_top %>%
group_by(tag) %>%
slice(n()) %>%
pull(tag)
# Filter for the six largest tags
ggplot(yearly_top) +
geom_line(aes(x = year, y = fraction, color = tag), size = 1.5, alpha = .8) +
geom_point(aes(x = year, y = fraction, color = tag), size = 2) +
scale_x_continuous(expand = c(0, 0), breaks = c(2008:2018)) +
scale_y_continuous(labels = scales::percent, breaks = c(0, .025, .05, .075, .1, .125), sec.axis = sec_axis(~ ., breaks = d_ends, labels = d_labels)) +
labs(title = "Fraction of total questions per year in Stack Overflow",
subtitle = "for top programming languages",
x = "",
y = "Fraction of total queries in the year") +
theme(legend.position = "none")
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages("htmltools")
install.packages("htmltools")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
