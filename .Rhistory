subtitle = "From 1970 to 2016")+
theme_fivethirtyeight() +
ylim(0, 10000)
songs %>%
group_by(genre) %>%
summarise(characters = round(mean(characters, na.rm = TRUE), 0)) %>%
ggplot(aes(reorder(genre, -characters), characters)) +
geom_col(fill = "steelblue", alpha = 0.7)) +
songs %>%
group_by(genre) %>%
summarise(characters = round(mean(characters, na.rm = TRUE), 0)) %>%
ggplot(aes(reorder(genre, -characters), characters)) +
geom_col(fill = "steelblue", alpha = 0.7) +
labs(y = "Length of song lyrics (in characters)", x = "Music Genre",
title = "Average lyrics characters per song for each music genre",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight()
## number of characters per song
songs %>%
ggplot() +
geom_boxplot(aes(genre, characters), fill = "steelblue", alpha = 0.7) +
labs(y = "Length of song lyrics (in characters)", x = "Music Genre",
title = "Length of song lyrics per music genre",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight() +
ylim(0, 10000)
songs %>%
group_by(genre) %>%
summarise(characters = round(mean(characters, na.rm = TRUE), 0)) %>%
ggplot(aes(reorder(genre, -characters), characters)) +
geom_col(fill = "steelblue", alpha = 0.7) +
labs(y = "Length of song lyrics (in characters)", x = "Music Genre",
title = "Average lyrics characters per song for each music genre",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight()
songs %>%
mutate(date = as_date(paste(as.character(songs$year), "-01", "-01"))) %>%
mutate(decade = floor_date(date, years(5))) %>%
group_by(decade, genre) %>%
summarise(N = n()) %>%
mutate(freq = round(N/sum(N), 2)) %>%
filter(genre %in% c("Country", "Hip-Hop", "Metal", "Pop", "Rock")) %>%
ggplot(aes(decade, freq, colour = genre)) +
# geom_line() +
geom_smooth(se = FALSE) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Smoothed frequency of total songs per Music Genre (top 5)")
songs %>%
mutate(date = as_date(paste(as.character(songs$year), "-01", "-01"))) %>%
mutate(decade = floor_date(date, years(5))) %>%
group_by(decade, genre) %>%
summarise(N = n()) %>%
mutate(freq = round(N/sum(N), 2)) %>%
filter(genre %in% c("Country", "Hip-Hop", "Metal", "Pop", "Rock")) %>%
ggplot(aes(decade, freq, colour = genre)) +
# geom_line() +
geom_smooth(se = FALSE) +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Smoothed frequency of total songs per Music Genre (top 5)")
songs %>%
mutate(date = as_date(paste(as.character(songs$year), "-01", "-01"))) %>%
mutate(decade = floor_date(date, years(5))) %>%
group_by(decade, genre) %>%
summarise(N = n()) %>%
mutate(freq = round(N/sum(N), 2)) %>%
filter(genre %in% c("Country", "Hip-Hop", "Metal", "Pop", "Rock")) %>%
ggplot(aes(decade, freq, colour = genre)) +
# geom_line() +
geom_smooth(se = FALSE) +
labs(y = "Proportion of total songs", x = "Year",
title = "Smoothed frequency of total songs per Music Genre (top 5)",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight() +
scale_y_continuous(labels = scales::percent_format())
words <-
songs %>%
unnest_tokens(word, lyrics) %>%
group_by(genre, word) %>%
count() %>%
arrange(-n) %>%
group_by(genre) %>%
top_n(n = 100, wt = n)
unique(words$genre)
words <-
songs %>%
unnest_tokens(word, lyrics) %>%
group_by(genre, word) %>%
count() %>%
arrange(-n) %>%
group_by(genre) %>%
top_n(n = 100, wt = n)
# Select top 5 genres
genres <- c("Rock", "Hip-Hop", "Pop", "Country", "Metal")
for(i in 1:length(genres)){
temp <- filter(words, genre == genres[i])
# Create a word cloud
par(bg="grey30")
wordcloud(words = temp$word, freq = temp$n, col=terrain.colors(length(temp$word), alpha=0.9), random.order=FALSE, rot.per=0.3 )
title(main =  genres[i] , font.main = 1, col.main = "cornsilk3", cex.main = 1.2)
}
# Load the model
load(file = "objects/songs_lda_3.RDA")
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/data/songs_lda_3.RDA")
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_3.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
top_terms <-
ap_topics %>%
group_by(topic) %>%
top_n(10, gamma) %>%
ungroup() %>%
arrange(topic, -gamma) %>%
rename(prob = gamma)
top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_3.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
top_terms <-
ap_topics %>%
group_by(topic) %>%
top_n(10, gamma) %>%
ungroup() %>%
arrange(topic, -gamma) %>%
rename(prob = gamma)
top_terms %>%
mutate(term = reorder(term, gama)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_3.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
test <- right_join(ap_topics, songs[, c("song", "genre")], by = c("document" = "song"))
# reorder titles in order of topic 1, topic 2, etc before plotting
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~ genre)
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_3.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
test <- right_join(ap_topics, songs[, c("song", "genre")], by = c("document" = "song"))
# reorder titles in order of topic 1, topic 2, etc before plotting
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = "steelblue", alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
# Libraries
library(readr)
library(tidyverse)
library(stringr)
library(tidytext)
library(lubridate)
library(wordcloud)
library(topicmodels)
library(tm)
library(stopwords)
library(quanteda)
library(ggthemes)
## _Insert processed dataset
songs <- readRDS(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/data/cleaned_data.RDS")
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(Freq = n/sum(n)) %>%
arrange(-Freq) %>%
ggplot() +
geom_col(aes(reorder(genre, -Freq), Freq), fill = "steelblue", alpha = 0.7) +
labs(y = "Number of songs", x = "Music Genre",
title = "Proportion of songs per music genre",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight() +
scale_y_continuous(labels = scales::percent_format())
songs %>%
mutate(date = as_date(paste(as.character(songs$year), "-01", "-01"))) %>%
mutate(decade = floor_date(date, years(5))) %>%
group_by(decade, genre) %>%
summarise(N = n()) %>%
mutate(freq = round(N/sum(N), 2)) %>%
filter(genre %in% c("Country", "Hip-Hop", "Metal", "Pop", "Rock")) %>%
ggplot(aes(decade, freq, colour = genre)) +
# geom_line() +
geom_smooth(se = FALSE) +
labs(y = "Proportion of total songs", x = "Year",
title = "Smoothed frequency of total songs per Music Genre",
subtitle = "Top 5 genres are selected")+
theme_fivethirtyeight() +
scale_y_continuous(labels = scales::percent_format())
## number of characters per song
songs %>%
ggplot() +
geom_boxplot(aes(genre, characters), fill = "steelblue", alpha = 0.7) +
labs(y = "Length of song lyrics (in characters)", x = "Music Genre",
title = "Length of song lyrics per music genre",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight() +
ylim(0, 10000)
songs %>%
group_by(genre) %>%
summarise(characters = round(mean(characters, na.rm = TRUE), 0)) %>%
ggplot(aes(reorder(genre, -characters), characters)) +
geom_col(fill = "steelblue", alpha = 0.7) +
labs(y = "Length of song lyrics (in characters)", x = "Music Genre",
title = "Average lyrics characters per music genre song",
subtitle = "From 1970 to 2016")+
theme_fivethirtyeight()
words <-
songs %>%
unnest_tokens(word, lyrics) %>%
group_by(genre, word) %>%
count() %>%
arrange(-n) %>%
group_by(genre) %>%
top_n(n = 100, wt = n)
# Select top 5 genres
genres <- c("Rock", "Hip-Hop", "Pop", "Country", "Metal")
for(i in 1:length(genres)){
temp <- filter(words, genre == genres[i])
# Create a word cloud
par(bg="grey30")
wordcloud(words = temp$word, freq = temp$n, col=terrain.colors(length(temp$word), alpha=0.9), random.order=FALSE, rot.per=0.3 )
title(main =  genres[i] , font.main = 1, col.main = "cornsilk3", cex.main = 1.2)
}
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_3.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
test <- right_join(ap_topics, songs[, c("song", "genre")], by = c("document" = "song"))
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = "steelblue", alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = factor(topic), alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = factor(topic), alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = topic, alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = topic, alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = factor(topic), alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = c("steelblue", "red", "green"), alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma)) +
geom_boxplot(fill = "steelblue", alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = topic)) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(topic = factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
test %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
facet_wrap(~ genre)
topics_probs %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
labs(col="Topics") +
facet_wrap(~ genre)
topics_probs %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
labs(col="Topics") +
facet_wrap(~ genre)
topics_probs <- right_join(ap_topics, songs[, c("song", "genre")], by = c("document" = "song"))
topics_probs %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
labs(col="Topics") +
facet_wrap(~ genre)
topics_probs %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
labs(col="Topics",
y = "Probabilities") +
facet_wrap(~ genre)
# Load the model
load(file = "/Users/manos/OneDrive/Projects/R/All_Projects/Songs_Lyrics/objects/songs_lda_2.RDA")
# _Calculate Tables ##########################################################
library(tidytext)
ap_topics <- tidy(songs_lda, matrix = "gamma")
topics_probs <- right_join(ap_topics, songs[, c("song", "genre")], by = c("document" = "song"))
topics_probs %>%
mutate(genre = reorder(genre, gamma * topic)) %>%
ggplot(aes(factor(topic), gamma, colour = factor(topic))) +
geom_boxplot(alpha = 0.7) +
labs(y = "Probability", x = "Topic",
title = "Topic probabilities per music genre",
subtitle = "") +
theme_fivethirtyeight() +
labs(col="Topics",
y = "Probabilities") +
facet_wrap(~ genre)
blogdown:::serve_site()
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(Freq = n/sum(n))
library(DT)
library(DT)
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(Freq = n/sum(n)) %>%
datatable()
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = n/sum(n)) %>%
arrange(-n) %>%
rename(genre = Genre,
n = `Total songs`) %>%
datatable()
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = n/sum(n)) %>%
arrange(-n) %>%
rename(Genre = genre,
`Total songs` = n) %>%
datatable()
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = round((n/sum(n))*100, 0) ) %>%
arrange(-n) %>%
rename(Genre = genre,
`Total songs` = n) %>%
datatable()
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = round((n/sum(n))*100, 2) ) %>%
arrange(-n) %>%
rename(Genre = genre,
`Total songs` = n) %>%
datatable()
blogdown:::serve_site()
library(DT)
knit_print.data.frame = function(x, ...) {
knit_print(DT::datatable(x), ...)
}
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = round((n/sum(n))*100, 2) ) %>%
arrange(-n) %>%
rename(Genre = genre,
`Total songs` = n) %>%
knit_print.data.frame()
library(DT)
library(knitr)
knit_print.data.frame = function(x, ...) {
knit_print(DT::datatable(x), ...)
}
songs %>%
group_by(genre) %>%
count() %>%
ungroup() %>%
mutate(`Proportion(%)` = round((n/sum(n))*100, 2) ) %>%
arrange(-n) %>%
rename(Genre = genre,
`Total songs` = n) %>%
knit_print.data.frame()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse)
library(lubridate)
library(ggthemes)
# Insert data
news <- readRDS("/Users/manos/Dropbox/Projects/R/All_Projects/2018_01_Newsbeast/data/newsbeast.all.RDS")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
